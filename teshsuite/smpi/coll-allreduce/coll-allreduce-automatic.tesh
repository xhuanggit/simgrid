# Smpi Allreduce collectives tests

p Test allreduce
! output sort
$ ${bindir:=.}/../../../smpi_script/bin/smpirun -map -hostfile ../hostfile_coll -platform ${platfdir:=.}/small_platform.xml -np 16 --log=xbt_cfg.thres:critical ${bindir:=.}/coll-allreduce --log=smpi_config.thres:warning --log=smpi_coll.thres:error --cfg=smpi/allreduce:automatic --cfg=smpi/async-small-thresh:65536 --cfg=smpi/send-is-detached-thresh:128000 --cfg=smpi/simulate-computation:no "--log=root.fmt:[%10.6r]%e(%i:%a@%h)%e%m%n" --log=smpi_mpi.thres:error --log=smpi_pmpi.thres:error
> [  0.000000] (0:maestro@) [rank 0] -> Tremblay
> [  0.000000] (0:maestro@) [rank 1] -> Tremblay
> [  0.000000] (0:maestro@) [rank 2] -> Tremblay
> [  0.000000] (0:maestro@) [rank 3] -> Tremblay
> [  0.000000] (0:maestro@) [rank 4] -> Jupiter
> [  0.000000] (0:maestro@) [rank 5] -> Jupiter
> [  0.000000] (0:maestro@) [rank 6] -> Jupiter
> [  0.000000] (0:maestro@) [rank 7] -> Jupiter
> [  0.000000] (0:maestro@) [rank 8] -> Fafard
> [  0.000000] (0:maestro@) [rank 9] -> Fafard
> [  0.000000] (0:maestro@) [rank 10] -> Fafard
> [  0.000000] (0:maestro@) [rank 11] -> Fafard
> [  0.000000] (0:maestro@) [rank 12] -> Ginette
> [  0.000000] (0:maestro@) [rank 13] -> Ginette
> [  0.000000] (0:maestro@) [rank 14] -> Ginette
> [  0.000000] (0:maestro@) [rank 15] -> Ginette
> [  0.516218] (8:7@Jupiter) The quickest allreduce was redbcast on rank 7 and took 0.008087
> [  0.516218] (7:6@Jupiter) The quickest allreduce was redbcast on rank 6 and took 0.008056
> [  0.516218] (6:5@Jupiter) The quickest allreduce was redbcast on rank 5 and took 0.008056
> [  0.516218] (5:4@Jupiter) The quickest allreduce was redbcast on rank 4 and took 0.008026
> [  0.516333] (4:3@Tremblay) The quickest allreduce was redbcast on rank 3 and took 0.008054
> [  0.516333] (3:2@Tremblay) The quickest allreduce was redbcast on rank 2 and took 0.008023
> [  0.516333] (2:1@Tremblay) The quickest allreduce was redbcast on rank 1 and took 0.008023
> [  0.516940] (13:12@Ginette) The quickest allreduce was mvapich2 on rank 12 and took 0.005970
> [  0.516940] (14:13@Ginette) The quickest allreduce was mvapich2 on rank 13 and took 0.006001
> [  0.516940] (15:14@Ginette) The quickest allreduce was mvapich2 on rank 14 and took 0.006001
> [  0.516940] (16:15@Ginette) The quickest allreduce was ompi on rank 15 and took 0.005970
> [  0.519494] (12:11@Fafard) The quickest allreduce was mvapich2 on rank 11 and took 0.006009
> [  0.519494] (11:10@Fafard) The quickest allreduce was mvapich2 on rank 10 and took 0.005978
> [  0.519494] (10:9@Fafard) The quickest allreduce was mvapich2 on rank 9 and took 0.005978
> [  0.519494] (9:8@Fafard) The quickest allreduce was mvapich2 on rank 8 and took 0.005948
> [  0.523490] (1:0@Tremblay) For rank 0, the quickest was redbcast : 0.008023 , but global was mvapich2 : 0.009199 at max
> [0] sndbuf=[0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 ]
> [1] sndbuf=[16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 ]
> [2] sndbuf=[32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 ]
> [3] sndbuf=[48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 ]
> [4] sndbuf=[64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 ]
> [5] sndbuf=[80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 ]
> [6] sndbuf=[96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 ]
> [7] sndbuf=[112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 ]
> [8] sndbuf=[128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 ]
> [9] sndbuf=[144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 ]
> [10] sndbuf=[160 161 162 163 164 165 166 167 168 169 170 171 172 173 174 175 ]
> [11] sndbuf=[176 177 178 179 180 181 182 183 184 185 186 187 188 189 190 191 ]
> [12] sndbuf=[192 193 194 195 196 197 198 199 200 201 202 203 204 205 206 207 ]
> [13] sndbuf=[208 209 210 211 212 213 214 215 216 217 218 219 220 221 222 223 ]
> [14] sndbuf=[224 225 226 227 228 229 230 231 232 233 234 235 236 237 238 239 ]
> [15] sndbuf=[240 241 242 243 244 245 246 247 248 249 250 251 252 253 254 255 ]
> [7] rcvbuf=[1920 1936 1952 1968 1984 2000 2016 2032 2048 2064 2080 2096 2112 2128 2144 2160 ]
> [4] rcvbuf=[1920 1936 1952 1968 1984 2000 2016 2032 2048 2064 2080 2096 2112 2128 2144 2160 ]
> [6] rcvbuf=[1920 1936 1952 1968 1984 2000 2016 2032 2048 2064 2080 2096 2112 2128 2144 2160 ]
> [5] rcvbuf=[1920 1936 1952 1968 1984 2000 2016 2032 2048 2064 2080 2096 2112 2128 2144 2160 ]
> [13] rcvbuf=[1920 1936 1952 1968 1984 2000 2016 2032 2048 2064 2080 2096 2112 2128 2144 2160 ]
> [12] rcvbuf=[1920 1936 1952 1968 1984 2000 2016 2032 2048 2064 2080 2096 2112 2128 2144 2160 ]
> [15] rcvbuf=[1920 1936 1952 1968 1984 2000 2016 2032 2048 2064 2080 2096 2112 2128 2144 2160 ]
> [14] rcvbuf=[1920 1936 1952 1968 1984 2000 2016 2032 2048 2064 2080 2096 2112 2128 2144 2160 ]
> [1] rcvbuf=[1920 1936 1952 1968 1984 2000 2016 2032 2048 2064 2080 2096 2112 2128 2144 2160 ]
> [2] rcvbuf=[1920 1936 1952 1968 1984 2000 2016 2032 2048 2064 2080 2096 2112 2128 2144 2160 ]
> [3] rcvbuf=[1920 1936 1952 1968 1984 2000 2016 2032 2048 2064 2080 2096 2112 2128 2144 2160 ]
> [11] rcvbuf=[1920 1936 1952 1968 1984 2000 2016 2032 2048 2064 2080 2096 2112 2128 2144 2160 ]
> [9] rcvbuf=[1920 1936 1952 1968 1984 2000 2016 2032 2048 2064 2080 2096 2112 2128 2144 2160 ]
> [8] rcvbuf=[1920 1936 1952 1968 1984 2000 2016 2032 2048 2064 2080 2096 2112 2128 2144 2160 ]
> [10] rcvbuf=[1920 1936 1952 1968 1984 2000 2016 2032 2048 2064 2080 2096 2112 2128 2144 2160 ]
> [0] rcvbuf=[1920 1936 1952 1968 1984 2000 2016 2032 2048 2064 2080 2096 2112 2128 2144 2160 ]
